package com.vo;

import java.util.ArrayList;
import java.util.List;

public class DictSingleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public DictSingleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDictSingleIdIsNull() {
            addCriterion("dict_single_id is null");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdIsNotNull() {
            addCriterion("dict_single_id is not null");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdEqualTo(String value) {
            addCriterion("dict_single_id =", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdNotEqualTo(String value) {
            addCriterion("dict_single_id <>", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdGreaterThan(String value) {
            addCriterion("dict_single_id >", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdGreaterThanOrEqualTo(String value) {
            addCriterion("dict_single_id >=", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdLessThan(String value) {
            addCriterion("dict_single_id <", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdLessThanOrEqualTo(String value) {
            addCriterion("dict_single_id <=", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdLike(String value) {
            addCriterion("dict_single_id like", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdNotLike(String value) {
            addCriterion("dict_single_id not like", value, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdIn(List<String> values) {
            addCriterion("dict_single_id in", values, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdNotIn(List<String> values) {
            addCriterion("dict_single_id not in", values, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdBetween(String value1, String value2) {
            addCriterion("dict_single_id between", value1, value2, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleIdNotBetween(String value1, String value2) {
            addCriterion("dict_single_id not between", value1, value2, "dictSingleId");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentIsNull() {
            addCriterion("dict_single_content is null");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentIsNotNull() {
            addCriterion("dict_single_content is not null");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentEqualTo(String value) {
            addCriterion("dict_single_content =", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentNotEqualTo(String value) {
            addCriterion("dict_single_content <>", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentGreaterThan(String value) {
            addCriterion("dict_single_content >", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentGreaterThanOrEqualTo(String value) {
            addCriterion("dict_single_content >=", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentLessThan(String value) {
            addCriterion("dict_single_content <", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentLessThanOrEqualTo(String value) {
            addCriterion("dict_single_content <=", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentLike(String value) {
            addCriterion("dict_single_content like", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentNotLike(String value) {
            addCriterion("dict_single_content not like", value, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentIn(List<String> values) {
            addCriterion("dict_single_content in", values, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentNotIn(List<String> values) {
            addCriterion("dict_single_content not in", values, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentBetween(String value1, String value2) {
            addCriterion("dict_single_content between", value1, value2, "dictSingleContent");
            return (Criteria) this;
        }

        public Criteria andDictSingleContentNotBetween(String value1, String value2) {
            addCriterion("dict_single_content not between", value1, value2, "dictSingleContent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict_single
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 12 09:03:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dict_single
     *
     * @mbggenerated Thu Apr 12 09:03:13 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}